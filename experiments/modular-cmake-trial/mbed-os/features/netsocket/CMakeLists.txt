add_library(netsocket
  CellularBase.h
  CellularInterface.h
  DNS.h
  DTLSSocket.cpp
  DTLSSocket.h
  DTLSSocketWrapper.cpp
  DTLSSocketWrapper.h
  EMAC.h
  EMACInterface.cpp
  EMACInterface.h
  EMACMemoryManager.h
  EthInterface.h
  EthernetInterface.cpp
  EthernetInterface.h
  ICMPSocket.cpp
  ICMPSocket.h
  InternetDatagramSocket.cpp
  InternetDatagramSocket.h
  InternetSocket.cpp
  InternetSocket.h
  L3IP.h
  L3IPInterface.cpp
  L3IPInterface.h
  MeshInterface.h
  NetStackMemoryManager.cpp
  NetStackMemoryManager.h
  NetworkInterface.cpp
  NetworkInterface.h
  NetworkInterfaceDefaults.cpp
  NetworkStack.cpp
  NetworkStack.h
  OnboardNetworkStack.h
  PPP.h
  PPPInterface.cpp
  PPPInterface.h
  Socket.h
  SocketAddress.cpp
  SocketAddress.h
  SocketStats.cpp
  SocketStats.h
  TCPServer.cpp
  TCPServer.h
  TCPSocket.cpp
  TCPSocket.h
  TLSSocket.cpp
  TLSSocket.h
  TLSSocketWrapper.cpp
  TLSSocketWrapper.h
  UDPSocket.cpp
  UDPSocket.h
  WiFiAccessPoint.cpp
  WiFiAccessPoint.h
  WiFiInterface.h
  cellular/CellularNonIPSocket.cpp
  cellular/CellularNonIPSocket.h
  cellular/ControlPlane_netif.h
  cellular/onboard_modem_api.h
  emac-drivers/TARGET_Freescale_EMAC/TARGET_K64F/hardware_init_MK64F12.c
  emac-drivers/TARGET_Freescale_EMAC/kinetis_emac.cpp
  emac-drivers/TARGET_Freescale_EMAC/kinetis_emac.h
  emac-drivers/TARGET_Freescale_EMAC/kinetis_emac_config.h
  nsapi.h
  nsapi_dns.cpp
  nsapi_dns.h
  nsapi_ppp.h
  nsapi_types.h
  ppp/include/ccp.h
  ppp/include/chap-md5.h
  ppp/include/chap-new.h
  ppp/include/chap_ms.h
  ppp/include/eap.h
  ppp/include/ecp.h
  ppp/include/eui64.h
  ppp/include/fsm.h
  ppp/include/ipcp.h
  ppp/include/ipv6cp.h
  ppp/include/lcp.h
  ppp/include/magic.h
  ppp/include/mppe.h
  ppp/include/polarssl/arc4.h
  ppp/include/polarssl/des.h
  ppp/include/polarssl/md4.h
  ppp/include/polarssl/md5.h
  ppp/include/polarssl/sha1.h
  ppp/include/ppp.h
  ppp/include/ppp_impl.h
  ppp/include/ppp_opts.h
  ppp/include/pppapi.h
  ppp/include/pppcrypt.h
  ppp/include/pppdebug.h
  ppp/include/pppoe.h
  ppp/include/pppol2tp.h
  ppp/include/pppos.h
  ppp/include/upap.h
  ppp/include/vj.h
  ppp/polarssl/ppp_arc4.c
  ppp/polarssl/ppp_des.c
  ppp/polarssl/ppp_md4.c
  ppp/polarssl/ppp_md5.c
  ppp/polarssl/ppp_sha1.c
  ppp/ppp_nsapi.cpp
  ppp/ppp_service.cpp
  ppp/ppp_service.h
  ppp/ppp_service_if.cpp
  ppp/ppp_service_if.h
  ppp/source/auth.c
  ppp/source/ccp.c
  ppp/source/chap-md5.c
  ppp/source/chap-new.c
  ppp/source/chap_ms.c
  ppp/source/demand.c
  ppp/source/eap.c
  ppp/source/eui64.c
  ppp/source/fsm.c
  ppp/source/ipcp.c
  ppp/source/ipv6cp.c
  ppp/source/lcp.c
  ppp/source/magic.c
  ppp/source/mppe.c
  ppp/source/multilink.c
  ppp/source/ppp.c
  ppp/source/ppp_ecp.c
  ppp/source/pppapi.c
  ppp/source/pppcrypt.c
  ppp/source/pppoe.c
  ppp/source/pppol2tp.c
  ppp/source/pppos.cpp
  ppp/source/upap.c
  ppp/source/utils.c
  ppp/source/vj.c
)

target_link_libraries(netsocket platform)
target_link_libraries(netsocket cellular)

target_include_directories(netsocket
    PUBLIC
        .
        ..  # This is bad and we shouldn't have to do this - the imports should be fixed to the correct levels as we add CMake files
        ppp/include/polarssl
        ppp/include
        ppp
        emac-drivers/TARGET_Freescale_EMAC
        cellular
)
